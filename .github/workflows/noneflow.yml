name: NoneFlow

on:
  issues:
    types: [opened, reopened, edited]
  pull_request_target:
    types: [closed]
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number || github.run_id }}
  cancel-in-progress: true

jobs:
  plugin_test:
    runs-on: ubuntu-latest
    name: nonebot2 plugin test
    if: ${{ !(github.event_name == 'issue_comment' && github.event.issue.pull_request) }}
    outputs:
      result: ${{ steps.plugin-test.outputs.RESULT }}
      output: ${{ steps.plugin-test.outputs.OUTPUT }}
    steps:
      - run: echo ${{ !(github.event.pull_request && (github.event.pull_request.head.repo.fork || !(contains(github.event.pull_request.labels.*.name, 'Plugin') || contains(github.event.pull_request.labels.*.name, 'Adapter') || contains(github.event.pull_request.labels.*.name, 'Bot')))) }}
      - name: Install poetry
        if: ${{ !startsWith(github.event_name, 'pull_request') }}
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Test Plugin
        id: plugin-test
        run: |
          curl -sSL https://raw.githubusercontent.com/nonebot/nonebot2-publish-bot/main/plugin_test.py -o plugin_test.py
          python plugin_test.py
  publish_bot:
    runs-on: ubuntu-latest
    name: nonebot2 publish bot
    if: ${{ !(github.event.pull_request && (github.event.pull_request.head.repo.fork || !(contains(github.event.pull_request.labels.*.name, 'Plugin') || contains(github.event.pull_request.labels.*.name, 'Adapter') || contains(github.event.pull_request.labels.*.name, 'Bot')))) }}
    needs: plugin_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: NoneBot2 Publish Bot
        uses: docker://ghcr.io/nonebot/noneflow:main
        with:
          config: >
            {
              "base": "main",
              "plugin_path": "nonebot/plugins.json",
              "bot_path": "nonebot/bots.json",
              "adapter_path": "nonebot/adapters.json"
            }
        env:
          PLUGIN_TEST_RESULT: ${{ needs.plugin_test.outputs.result }}
          PLUGIN_TEST_OUTPUT: ${{ needs.plugin_test.outputs.output }}
          APP_ID: ${{ secrets.APP_ID }}
          PRIVATE_KEY: ${{ secrets.APP_KEY }}
